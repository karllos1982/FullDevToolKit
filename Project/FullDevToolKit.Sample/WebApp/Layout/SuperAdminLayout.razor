@inherits LayoutComponentBase

@inject IJSRuntime JSRuntime
@inject IAppControllerAsync<UserAuthenticated> _appctrl
@inject IAuthProxyManager _appservices
@inject IDataCacheProxyManager _cache
@inject IAppSettings _settings
@inject NavigationManager NavigationManager
@inject HttpClient _httpclient


<PageTitle>Super Admin</PageTitle>


<script src="assets/js/scripts.bundle.js"></script>

<div class="d-flex flex-column flex-root app-root" id="kt_app_root">

	<div class="app-page flex-column flex-column-fluid" id="kt_app_page">

		<div id="kt_app_header" class="app-header">

			<div class="app-container container-fluid d-flex align-items-stretch justify-content-between" id="kt_app_header_container">

				<div class="d-flex align-items-center d-lg-none ms-n3 me-1 me-md-2" title="Show sidebar menu">
					<div class="btn btn-icon btn-active-color-primary w-35px h-35px" id="kt_app_sidebar_mobile_toggle">
						<i class="ki-duotone ki-abstract-14 fs-2 fs-md-1">
							<span class="path1"></span>
							<span class="path2"></span>
						</i>
					</div>
				</div>

				<div class="d-flex align-items-center flex-grow-1 flex-lg-grow-0">
					<a href="home" class="d-lg-none">
						<img alt="Logo" src="../assets/images/default-small.svg" class="h-30px" style="" />
					</a>
				</div>

				<div class="d-flex align-items-stretch justify-content-between flex-lg-grow-1" id="kt_app_header_wrapper">
				

					<div class="app-header-menu app-header-mobile-drawer align-items-stretch"
						 data-kt-drawer="true" data-kt-drawer-name="app-header-menu"
						 data-kt-drawer-activate="{default: true, lg: false}" data-kt-drawer-overlay="true"
						 data-kt-drawer-width="250px" data-kt-drawer-direction="end" data-kt-drawer-toggle="#kt_app_header_menu_toggle"
						 data-kt-swapper="true" data-kt-swapper-mode="{default: 'append', lg: 'prepend'}"
						 data-kt-swapper-parent="{default: '#kt_app_body', lg: '#kt_app_header_wrapper'}">


						<div class="menu menu-rounded menu-column menu-lg-row my-5 my-lg-0 align-items-stretch fw-semibold px-2 px-lg-0" id="kt_app_header_menu" data-kt-menu="true">

							<div data-kt-menu-trigger="{default: 'click', lg: 'hover'}" data-kt-menu-placement="bottom-start" class="menu-item menu-here-bg menu-lg-down-accordion me-0 me-lg-2">

								<span class="menu-link">
									<h3 class="menu-title"> Super Admin </h3>

								</span>

							</div>

						</div>

					</div>
				

					<div class="app-navbar flex-shrink-0">					


						<!--begin::User menu-->
						<UserView 
							Islogged=@islogged 
							User="@user" 
							Service="@GetService()"
							Localization="@localization"
								  LanguageList="@langs"
								  OnLogout="Logout">
						</UserView>


						<!--end::User menu-->


						<div class="app-navbar-item d-lg-none ms-2 me-n2" title="Show header menu">
							<div class="btn btn-flex btn-icon btn-active-color-primary w-30px h-30px" id="kt_app_header_menu_toggle">
								<i class="ki-duotone ki-element-4 fs-1">
									<span class="path1"></span>
									<span class="path2"></span>
								</i>
							</div>
						</div>

					</div>

				</div>

			</div>

		</div>
		<!--end::Header-->
		<!--begin::Wrapper-->
		<div class="app-wrapper flex-column flex-row-fluid" id="kt_app_wrapper" style="margin-top: var(--bs-app-header-height) !important;background-color:#f5f8fa;">
			<!--begin::Sidebar-->
			<div id="kt_app_sidebar" class="app-sidebar flex-column" data-kt-drawer="true" data-kt-drawer-name="app-sidebar" data-kt-drawer-activate="{default: true, lg: false}" data-kt-drawer-overlay="true" data-kt-drawer-width="225px" data-kt-drawer-direction="start" data-kt-drawer-toggle="#kt_app_sidebar_mobile_toggle">
				<!--begin::Logo-->
				<div class="app-sidebar-logo px-6" id="kt_app_sidebar_logo">
					<!--begin::Logo image-->
					<a href="home">
						<img alt="Logo" src="../assets/images/default-dark.svg" class="h-25px app-sidebar-logo-default" style="" />
						<img alt="Logo" src="../assets/images/default-dark.svg" class="h-20px app-sidebar-logo-minimize" style="" />
					</a>
					<!--end::Logo image-->
					
					<div id="kt_app_sidebar_toggle" class="app-sidebar-toggle btn btn-icon btn-shadow btn-sm btn-color-muted btn-active-color-primary body-bg h-30px w-30px position-absolute top-50 start-100 translate-middle rotate" data-kt-toggle="true" data-kt-toggle-state="active" data-kt-toggle-target="body" data-kt-toggle-name="app-sidebar-minimize">
						<i class="ki-duotone ki-double-left fs-2 rotate-180">
							<span class="path1"></span>
							<span class="path2"></span>
						</i>
					</div>
					<!--end::Sidebar toggle-->
				</div>
				<!--end::Logo-->				
				<!--begin::sidebar menu-->
				
				<AsideMenu RoleName="SuperAdmin" ></AsideMenu>

				<!--end::sidebar menu-->

			</div>
			<!--end::Sidebar-->
			<!--begin::Main-->
			<div class="app-main flex-column flex-row-fluid" id="kt_app_main">

				<div class="d-flex flex-column flex-column-fluid">


					@Body


				</div>
			
			</div>
			<!--end:::Main-->
		</div>
		<!--end::Wrapper-->
	</div>
	<!--end::Page-->
</div>



@code{

	protected bool islogged = false;
	protected UserAuthenticated user;
	protected MenuLink menu;
	protected List<UserPermissions> permissions = null;
	protected DefaultLocalization localization = null;
	protected List<LocalizationTextList> langs = null; 
	protected string siteURL = "";
	protected string homeURL = ""; 
	

	protected MessageBox msgbox;
	protected MessageBox msgbox_create;
	protected TaskLoading loading;

	protected TaskButton searchbtn;
	protected TaskButton newbtn;
	protected TaskButton savenewbtn;

	protected string _LoadingData_Text;
	protected string _PageTitle;
	protected string _msgYes = "";
	protected string _msgNo = "";

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{

		if (firstRender)
		{
			await Initialize(firstRender);
				
			StateHasChanged();
		}
	}

	protected async Task Initialize(bool firstRender)
	{

		if (firstRender)
		{

			if (await  this.InitResources())
			{				
				await this.InitCacheAndLocalization();							
				this.InitServices();
			}
			else
			{

				NavigationManager.NavigateTo(siteURL + "/login");
			}

		}

	}

	protected async Task<bool> InitResources()
	{
		bool ret = false;

		((MyAppController)_appctrl).Settings = _settings;
		siteURL = _settings.SiteURL;
		homeURL = siteURL + "/home"; 

		islogged = await _appctrl.IsAuthenticated();

		if (islogged)
		{
			await _appctrl.GetSession();
			user = _appctrl.UserInfo;

			ret = (user.RoleName == "SuperAdmin"); 						
			permissions = await _appctrl.GetUserPermissions(user);
			
		}

		return ret;
	}

	protected async Task InitCacheAndLocalization()
	{		
		_cache.Init(_httpclient, _settings.ServiceURL, user.Token);

		this.localization = new DefaultLocalization();	

		this.localization.Set(await ((DataCacheProxy)_cache).ListLocalizationTexts(),
				user.LocalizationLanguage);

		this.langs = await ((DataCacheProxy)_cache).ListLanguages(); 
	}

	protected void InitServices()
	{
		_appservices.Init(_httpclient, _settings.ServiceURL, _appctrl.UserInfo.Token);
		
	}


	private async Task Logout()
	{

		if (_appctrl.UserInfo != null)
		{
			await ((AuthProxy)_appservices).Logout();

			await _appctrl.Logout();
			string url = _settings.SiteURL;
			NavigationManager.NavigateTo(url);
			islogged = false;
		}
				
		StateHasChanged();
	}

	private AuthProxy GetService()
	{

		return (AuthProxy)_appservices;
	}


	private async Task OpenMenu()
	{
		await menu.OpenMobileMenu();

	}

	private void GotoHome()
	{
		NavigationManager.NavigateTo(homeURL);
	}



}