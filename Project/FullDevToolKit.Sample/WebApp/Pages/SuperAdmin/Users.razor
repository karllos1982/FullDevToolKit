@page "/users"

@inherits SuperAdminLayout
@layout SuperAdminLayout

@inject NavigationManager NavigationManager
@inject HttpClient _httpclient
@inject IAppControllerAsync<UserAuthenticated> _appctrl
@inject IAppSettings _settings
@inject IDataCacheProxyManager _cache
@inject ISystemProxyManager _systemservices



<MessageBox @ref="msgbox"></MessageBox>

<MessageBox @ref="msgbox_create"
            ButtonNo=@_msgNo ButtonYes=@_msgYes ButtonOK="false"
            OnClickYes="OnNew">
</MessageBox>


<TaskLoading @ref="loading" Title=@_LoadingData_Text></TaskLoading>


<div id="kt_app_content" class="app-content flex-column-fluid">
    <div id="kt_app_content_container" class="app-container container-xxl">

        <div class="">

             <BreadCrumbView PageTitle="@_PageTitle" HomeURL="@homeURL" ></BreadCrumbView>

            @if (view != null)
            {
                <div style="display:@view.Get("SearchingState")">

                    <div class="row gy-5 g-xl-10">

                        <div class="col-xl-4">
                            <div class="card card-flush h-xl-100">
                                <div class="card-header pt-7">

                                    <h3 class="card-title align-items-start flex-column">
                                        <span class="card-label fw-bold text-dark">@view.texts.Get("SearchButtonLabel")</span>
                                    </h3>

                                </div>

                                <div class="card-body">
                                    <div class="form-group">
                                        <label class="form-label">@view.texts.Get("SearchByEmail-Label"):</label>
                                        <input type="email" @bind-value="view.param.pEmail" class="form-control"
                                           placeholder=@view.texts.Get("SearchByEmail-Description")>
                                    </div>

                                    <div class="form-group">
                                        <label class="form-label">@view.texts.Get("SearchByUserName-Label"):</label>
                                        <input type="text" maxlength="20" @bind-value="view.param.pUserName" class="form-control"
                                           placeholder=@view.texts.Get("SearchByUserName-Description")>
                                    </div>

                                    <div class="form-group">
                                        <label class="form-label">@view.texts.Get("SearchByInstance-Label"):</label>
                                        @if (view.listInstances != null)
                                        {
                                            @if (view.listInstances.Count > 0)
                                            {
                                                <SelectList TItem="InstanceList"
                                                TValue="Int64"
                                                Data="@view.listInstances"
                                                TextField="@((item)=>item.InstanceName)"
                                                ValueField="@((item)=>item.InstanceID)"
                                                @bind-SelectedValue="@view.param.pInstanceID"></SelectList>
                                            }

                                        }

                                    </div>

                                    <div class="form-group">
                                        <label class="form-label">@view.texts.Get("SearchByRole-Label"):</label>
                                        @if (view.listRoles != null)
                                        {
                                            @if (view.listRoles.Count > 0)
                                            {
                                                <SelectList TItem="RoleList"
                                                TValue="Int64"
                                                Data="@view.listRoles"
                                                TextField="@((item)=>item.RoleName)"
                                                ValueField="@((item)=>item.RoleID)"
                                                @bind-SelectedValue="@view.param.pRoleID"></SelectList>
                                            }

                                        }

                                    </div>

                                    <p class="field" style="padding-top:10px">

                                        <TaskButton @ref="searchbtn" OnClick="OnSearch" 
                                                Title=@view.texts.Get("SearchButtonLabel")
                                                ReadOnly=!view.Permissions.AllowRead
                                                ActionLabel=@view.texts.Get("SearchingLabel")>
                                        </TaskButton>

                                    </p>

                                    <p class="field" style="padding-top:10px">
                                        <TaskButton @ref="newbtn" OnClick="OnNew" 
                                                Title=@view.texts.Get("NewUser-Label") Class="dark"
                                                Description=@view.texts.Get("NewUser-Description") ReadOnly=!view.Permissions.AllowSave
                                                ActionLabel=@view.texts.Get("InsertingLoadingLabel")>
                                        </TaskButton>

                                    </p>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-8">

                            <div class="card card-flush h-xl-100">

                                <div class="card-header pt-7">

                                    <h3 class="card-title align-items-start flex-column">
                                        <span class="card-label fw-bold text-dark">@view.texts.Get("SearchResultLabel")</span>
                                    </h3>
                                </div>

                                <div class="card-body">
                                    @if (view.searchresult != null)
                                    {
                                        @if (view.searchresult.Count > 0)
                                        {
                                            <DataGrid TItem="UserResult" Data="@view.searchresult" Responsive ShowPager>
                                                <DataGridColumns>

                                                    <DataGridColumn Field="@nameof(UserResult.Email)" Caption=@view.texts.Get("Email-Label") />

                                                    <DataGridColumn Field="@nameof(UserResult.IsActive)" Caption=@view.texts.Get("Active-Label")>
                                                        <DisplayTemplate>
                                                            @{
                                                                UserResult user = (context as UserResult);
                                                                if (user.IsActive)
                                                                {
                                                                    <span>@view.texts.Get("Yes-Text")</span>
                                                                }
                                                                else
                                                                {
                                                                    <span>@view.texts.Get("No-Text")</span>
                                                                }
                                                            }
                                                        </DisplayTemplate>
                                                    </DataGridColumn>

                                                    <DataGridColumn Field="@nameof(UserResult.IsLocked)"
                                                        Caption=@view.texts.Get("Locked-Label")>
                                                        <DisplayTemplate>
                                                            @{
                                                                UserResult user = (context as UserResult);
                                                                if (user.IsLocked)
                                                                {
                                                                    <span>@view.texts.Get("Yes-Text")</span>
                                                                }
                                                                else
                                                                {
                                                                    <span>@view.texts.Get("No-Text")</span>
                                                                }
                                                            }
                                                        </DisplayTemplate>
                                                    </DataGridColumn>

                                                    <DataGridColumn Field="@nameof(UserResult.UserID)" 
                                                        Caption=@view.texts.Get("DetailsLabel")>
                                                        <DisplayTemplate>
                                                            @{
                                                                UserResult user = (context as UserResult);

                                                                @if (view.Permissions.AllowSave)
                                                                {
                                                                    <IconButton Icon="IconButton.TYPEICONENUM.DETAILS"
                                                            OnClick="()=>OnDetClick(user.UserID)"></IconButton>
                                                                }

                                                            }

                                                        </DisplayTemplate>
                                                    </DataGridColumn>

                                                </DataGridColumns>

                                            </DataGrid>

                                        }
                                        else
                                        {
                                            <p> @view.texts.Get("NoRecordsFound") </p>
                                        }
                                    }

                                </div>

                            </div>


                        </div>


                    </div>

                </div>

                <div style="display:@view.EditingState">

                    <BackButton OnClick="Back"></BackButton>

                    @if (!view.Inserting)
                    {

                        <div class="row gy-5 g-xl-10">

                            <div class="col-xl-8">
                                <div class="card card-flush h-xl-100">

                                    <div class="card-header card-header-stretch">

                                        <div class="card-toolbar m-0">

                                            <ul class="nav nav-tabs nav-line-tabs nav-stretch fs-6 border-0 fw-bold" role="tablist">
                                                <li class="nav-item" role="presentation">
                                                    <a id="kt_link_usertab1" class="nav-link justify-content-center text-active-gray-800 active" data-bs-toggle="tab" role="tab" href="#kt_usertab1">@view.texts.Get("MainData-Label")</a>
                                                </li>
                                                <li class="nav-item" role="presentation">
                                                    <a id="kt_link_usertab2" class="nav-link justify-content-center text-active-gray-800" data-bs-toggle="tab" role="tab" href="#kt_usertab2"> @view.texts.Get("User-SecondTabLabel") </a>
                                                </li>

                                            </ul>

                                        </div>

                                    </div>

                                    <div class="tab-content">
                                        <div id="kt_usertab1" class="card-body p-0 tab-pane fade show active" role="tabpanel" aria-labelledby="kt_link_usertab1">
                                            <div class="card-body">

                                                <div class="row">
                                                    <div class="col-md-12">

                                                        <div class="form-group">
                                                            <label class="form-label" for="name">@view.texts.Get("UserName-Label"):</label>
                                                            <input type="text" disabled class="form-control field" value="@view.result.UserName" />

                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="form-label" for="email">@view.texts.Get("Email-Label"):</label>
                                                            <input type="text" disabled class="form-control field" value="@view.result.Email" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label class="form-label" for="name">@view.texts.Get("CreateDate-Label")</label>
                                                            <input type="text" disabled class="form-control field" value="@view.result.CreateDate" />

                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label class="form-label" for="email">@view.texts.Get("LastLoginDate-Label")</label>
                                                            <input type="text" disabled class="form-control field" value="@view.result.LastLoginDate" />
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="">
                                                            <label class="form-label">@view.texts.Get("DefaultLanguage-Label") :</label>
                                                            <input type="text" disabled class="form-control field" value="@view.result.DefaultLanguage" />

                                                        </div>
                                                    </div>


                                                </div>

                                                <div class="row">
                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label class="form-label" for="name">@view.texts.Get("LastLoginIP-Label")</label>
                                                            <input type="text" disabled class="form-control field" value="@view.result.LastLoginIP" />

                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label class="form-label" for="email">@view.texts.Get("LoginCounter-Label")</label>
                                                            <input type="text" disabled class="form-control field" value="@view.result.LoginCounter" />
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4">
                                                        <div class="form-group">
                                                            <label class="form-label" for="email">@view.texts.Get("PasswordRecovery-Label")</label>
                                                            <input type="text" disabled class="form-control field" value="@view.result.PasswordRecoveryCode" />
                                                        </div>
                                                    </div>

                                                </div>


                                            </div>

                                        </div>

                                        <div id="kt_usertab2" class="card-body p-0 tab-pane fade" role="tabpanel" aria-labelledby="kt_link_usertab2">
                                            <div class="card-body">

                                                <div class="row">
                                                    <div class="col-md-8">
                                                        <div class="">
                                                            <h4>@view.texts.Get("AlterInstance-Label"):</h4>
                                                            <label class="form-label">@view.texts.Get("AlterInstance-Description"):</label>
                                                            @if (view.listInstances != null)
                                                            {
                                                                @if (view.listInstances.Count > 0)
                                                                {
                                                                    <SelectList TItem="InstanceList"
                                                                TValue="Int64"
                                                                Data="@view.listInstances"
                                                                TextField="@((item)=>item.InstanceName)"
                                                                ValueField="@((item)=>item.InstanceID)"
                                                                @bind-SelectedValue="@view.InstanceSelected.InstanceID"></SelectList>
                                                                }

                                                            }

                                                        </div>
                                                    </div>
                                                    <div class="col-md-4" style="padding-top:52px">

                                                        @* <TaskButton @ref="alterinstancebtn" 
                                                            Title=@view.texts.Get("AlterInstance-Label") OnClick="OnAlterInstance"
                                                            Description=@view.texts.Get("AlterInstance-Description") Class="dark"
                                                            ActionLabel=@view.texts.Get("Altering-Label") ReadOnly=!view.Permissions.AllowSave>
                                                        </TaskButton> *@

                                                    </div>

                                                </div>


                                                <div class="row" style="padding-top:30px">
                                                    <div class="col-md-8">
                                                        <div class="">
                                                            <h4>@view.texts.Get("AlterRole-Label"):</h4>
                                                            <label class="form-label">@view.texts.Get("AlterRole-Description"):</label>
                                                            @if (view.listRoles != null & view.listRoles.Count > 0)
                                                            {
                                                                <SelectList TItem="RoleList"
                                                                TValue="Int64"
                                                                Data="@view.listRoles"
                                                                TextField="@((item)=>item.RoleName)"
                                                                ValueField="@((item)=>item.RoleID)"
                                                                @bind-SelectedValue="@view.RoleSelected.RoleID"></SelectList>

                                                            }

                                                        </div>
                                                    </div>

                                                    <div class="col-md-4" style="padding-top:52px">

                                                       @*  <TaskButton @ref="alterrolebtn" 
                                                            Title=@view.texts.Get("AlterRole-Label") OnClick="OnAlterRole"
                                                            Description=@view.texts.Get("AlterRole-Description") Class="dark"
                                                            ActionLabel=@view.texts.Get("Altering-Label") ReadOnly=!view.Permissions.AllowSave>
                                                        </TaskButton> *@

                                                    </div>

                                                </div>


                                            </div>
                                        </div>

                                    </div>


                                </div>

                            </div>

                            <div class="col-xl-4">

                                <div class="card card-flush h-xl-100">


                                    <div class="card-body">

                                        <div class="row">
                                            <div class="col-md-12">

                                                <div class="me-7 mb-4">
                                                    <div class="symbol symbol-100px symbol-lg-160px symbol-fixed position-relative">
                                                        <img src="@view.result.ProfileImageURL" alt="image">
                                                    </div>
                                                </div>

                                            </div>
                                        </div>

                                        <div class="row" style="padding-top:20px">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="form-label" for="name">@view.texts.Get("UserStatus-Label"):</label>


                                                </div>
                                            </div>
                                        </div>

                                        <div class="row" style="padding-top:20px">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="form-label" for="name">@view.texts.Get("Active-Label"):</label>
                                                    <Switch TValue="bool" @bind-Checked="@view.isUserActive"></Switch>

                                                </div>

                                            </div>
                                        </div>

                                        <div class="row" style="padding-top:20px">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="form-label" for="name">@view.texts.Get("Locked-Label"):</label>
                                                    <Switch TValue="bool" @bind-Checked="@view.isUserLocked"></Switch>

                                                </div>
                                            </div>
                                        </div>

                                        <p class="field" style="padding-top:10px">

                                            <TaskButton @ref="statebtn" Title=@view.texts.Get("ChangeUserState-Label") OnClick="OnChangeState"
                                                Description=@view.texts.Get("ChangeUserState-Description")
                                                ActionLabel=@view.texts.Get("Altering-Label") ReadOnly=!view.Permissions.AllowSave>
                                            </TaskButton>

                                        </p>


                                    </div>

                                </div>


                            </div>


                        </div>

                    }
                    else
                    {
                        <div class="row gy-5 g-xl-10">

                            <div class="col-xl-10">
                                <div class="card card-flush h-xl-100">
                                    <div class="card-header pt-7">

                                        <h3 class="card-title align-items-start flex-column">
                                            <span class="card-label fw-bold text-dark">@view.texts.Get("CreateUser-Label")</span>
                                        </h3>

                                    </div>

                                    <div class="card-body">


                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="">
                                                    <label class="form-label">@view.texts.Get("Instance-Label"):</label>
                                                    @if (view.listInstances != null)
                                                    {
                                                        @if (view.listInstances.Count > 0)
                                                        {
                                                            <SelectList TItem="InstanceList"
                                                        TValue="Int64"
                                                        Data="@view.listInstances"
                                                        TextField="@((item)=>item.InstanceName)"
                                                        ValueField="@((item)=>item.InstanceID)"
                                                        @bind-SelectedValue="@view.newModel.InstanceID"></SelectList>
                                                        }

                                                    }
                                                    <label class="validation_field">@view.GetSummaryMessage("InstanceID") </label>

                                                </div>
                                            </div>

                                        </div>


                                        <div class="row" style="padding-top:20px">
                                            <div class="col-md-12">
                                                <div class="">
                                                    <label class="form-label">@view.texts.Get("Role-Label"):</label>
                                                    @if (view.listRoles != null & view.listRoles.Count > 0)
                                                    {
                                                        <SelectList TItem="RoleList"
                                                        TValue="Int64"
                                                        Data="@view.listRoles"
                                                        TextField="@((item)=>item.RoleName)"
                                                        ValueField="@((item)=>item.RoleID)"
                                                        @bind-SelectedValue="@view.newModel.RoleID"></SelectList>

                                                    }
                                                    <label class="validation_field">@view.GetSummaryMessage("RoleID") </label>

                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="">
                                                    <label class="form-label">@view.texts.Get("Email-Label"):</label>
                                                    <input type="text" @bind-value="@view.newModel.Email" maxlength="100" class="form-control" />
                                                    <label class="validation_field">@view.GetSummaryMessage("Email") </label>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="">
                                                    <label class="form-label">@view.texts.Get("UserName-Label"):</label>
                                                    <input type="text" @bind-value="@view.newModel.UserName" maxlength="50" class="form-control" />
                                                    <label class="validation_field">@view.GetSummaryMessage("UserName") </label>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="">
                                                    <label class="form-label">@view.texts.Get("Password-Label") :</label>
                                                    <input type="password" @bind-value="@view.newModel.Password" maxlength="8" class="form-control" />
                                                    <label class="validation_field">@view.GetSummaryMessage("Password") </label>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="">
                                                    <label class="form-label">@view.texts.Get("DefaultLanguage-Label") :</label>

                                                    @if (view.listLangs != null)
                                                    {
                                                        @if (view.listLangs.Count > 0)
                                                        {
                                                            <SelectList TItem="LocalizationTextList"
                                                        TValue="string"
                                                        Data="@view.listLangs"
                                                        TextField="@((item)=>item.Language)"
                                                        ValueField="@((item)=>item.Language)"
                                                        @bind-SelectedValue="@view.newModel.DefaultLanguage"></SelectList>
                                                        }

                                                    }
                                                    <label class="validation_field">@view.GetSummaryMessage("DefaultLanguage") </label>

                                                </div>
                                            </div>
                                        </div>

                                        <p class="field" style="padding-top:10px">

                                            <TaskButton @ref="savenewbtn" OnClick="OnCreate" 
                                                Title=@view.texts.Get("CreateUserButton_Label")
                                                Description=@view.texts.Get("CreateUser-Description")
                                                ActionLabel=@view.texts.Get("Saving-Label") ReadOnly=!view.Permissions.AllowSave>
                                            </TaskButton>

                                        </p>


                                    </div>
                                </div>
                            </div>


                        </div>



                    }

                </div>
            }
            else
            {

                <PageLoading LoadingText="Loading page. Please, wait..."></PageLoading>

            }
        </div>
    </div>
</div>



@code {
   
    
    private TaskButton statebtn ;    
    private TaskButton alterinstancebtn;
    private TaskButton alterrolebtn;


    //

    private UserViewModel view;

    //


        protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            if (await this.InitResources())
            {
                await this.InitCacheAndLocalization();

                this.InitServices();

                view = new UserViewModel((_systemservices as SystemProxy),
                   (_cache as DataCacheProxy), user);

                view.Permissions
                    = BaseViewModel.SetPermissions(permissions, "SYSUSER", false);

                await view.InitializeModels();

                _LoadingData_Text = view.texts.Get("LoadingData");
                _PageTitle = view.texts.Get("Instance-PageTitle");
                _msgYes = view.texts.Get("Yes-Text");
                _msgNo = view.texts.Get("No-Text");

            }

            StateHasChanged();

        }
    }



    public async Task OnSearch()
    {
        searchbtn.Begin();
        await view.Search();

        if (!view.ServiceStatus.Success)
        {
            await msgbox.ShowDialog(view.texts.Get("ErrorOnExecuteSearch"),
             view.ServiceStatus.Exceptions.Messages[0].Description);
        }

        searchbtn.End();
    }

    public void OnNew()
    {

        view.InitNew();
        StateHasChanged();
    }

    public async Task OnGet(object id)
    {
        await loading.Begin();

        await view.Get(id);

        await loading.End();

        if (!view.ServiceStatus.Success)
        {
            await msgbox.ShowDialog(view.texts.Get("ErrorOnReturnData"),
                 view.ServiceStatus.Exceptions.Messages[0].Description);
        }
        else
        {
            view.InitEdit();

        }

        StateHasChanged();
    }

    public async Task OnChangeState()
    {
        statebtn.Begin();
        await view.ChangeState();

        if (!view.ServiceStatus.Success)
        {
            await msgbox.ShowDialog(view.texts.Get("AlterStatus-Error"),
             view.ServiceStatus.Exceptions.Messages[0].Description);
            
        }
        else
        {            

            await msgbox.ShowDialog(view.texts.Get("NoticeLabel"),
                view.texts.Get("AlterStatus-Success"));
        }

        statebtn.End();

    }

    public async Task OnCreate()
    {
        savenewbtn.Begin();

        await view.CreateNew();

        if (!view.ServiceStatus.Success)
        {
            await msgbox.ShowDialog(view.texts.Get("ErrorOnCreateNewRecord"),
                view.ServiceStatus.Exceptions.Messages[0].Description);
           
        }
        else
        {
            this.Back();
            await msgbox_create.ShowDialog(view.texts.Get("SuccessLabel"),
              view.texts.Get("AfterSaveAnswering"));

        }

        savenewbtn.End();

    }

    public async Task OnDetClick(object id)
    {
        await OnGet(id);

    }



    public void Back()
    {
        view.BackToSearch();
        StateHasChanged();

    }

    public void GoHome()
    {
        string url = _appctrl.UserInfo.HomeURL;
        NavigationManager.NavigateTo(url);

    }


}