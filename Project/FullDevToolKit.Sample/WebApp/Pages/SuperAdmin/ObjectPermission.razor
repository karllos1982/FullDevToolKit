@page "/objectpermission"
@inherits SuperAdminLayout
@layout SuperAdminLayout

@inject NavigationManager NavigationManager
@inject HttpClient _httpclient
@inject IAppControllerAsync<UserAuthenticated> _appctrl
@inject IAppSettings _settings
@inject IDataCacheProxyManager _cache
@inject ISystemProxyManager _systemservices



<MessageBox @ref="msgbox"></MessageBox>

<MessageBox @ref="msgbox_create"
            ButtonNo=@_msgNo ButtonYes=@_msgYes ButtonOK="false"
            OnClickYes="OnNew">
</MessageBox>

<TaskLoading @ref="loading" Title=@_LoadingData_Text></TaskLoading>

<div id="kt_app_content" class="app-content flex-column-fluid">
    <div id="kt_app_content_container" class="app-container container-xxl">
            
        <div class="">        

                    <BreadCrumbView PageTitle="@_PageTitle" HomeURL="@homeURL" ></BreadCrumbView>

                    @if (view != null)
                    {
                        <div style="display:@view.SearchingState">

                            <div class="row gy-5 g-xl-10">

                                <div class="col-xl-4">                                
                                    <div class="card card-flush h-xl-100">								      
								        <div class="card-header pt-7">
									  
									        <h3 class="card-title align-items-start flex-column">
                                        <span class="card-label fw-bold text-dark">@view.texts.Get("SearchButtonLabel")</span>
                                    </h3>									        
									       
                                        </div>
                                           
                                        <div class="card-body">
										         <div class="form-group">
                                                    <label class="form-label">@view.texts.Get("SearchByObjectName-Label"):</label>
                                                    <input type="text" @bind-value="view.param.pObjectName"
                                                        placeholder=@view.texts.Get("SearchByObjectName-Description") class="form-control">
                                                       
                                                </div>

                                                 <div class="form-group">
                                                     <label class="form-label">@view.texts.Get("SearchByObjectCode-Label"):</label>
                                                    <input type="text" maxlength="20" @bind-value="view.param.pObjectCode"
                                                        placeholder=@view.texts.Get("SearchByObjectCode-Description") class="form-control">
                                                       
                                                </div>                                              

                                                <p class="field" style="padding-top:10px">

                                                      <TaskButton @ref="searchbtn" OnClick="OnSearch" Title=@view.texts.Get("SearchButtonLabel")
                                                             ReadOnly=!view.Permissions.AllowRead
                                                             ActionLabel=@view.texts.Get("SearchingLabel")>
                                                      </TaskButton>

                                                </p>									       
									    
                                                 <p class="field" style="padding-top:10px">
                                                        <TaskButton @ref="newbtn" OnClick="OnNew"
                                                                Title=@view.texts.Get("NewObject-Label") Class="dark"
                                                                Disabled="" ReadOnly=!view.Permissions.AllowSave
                                                                ActionLabel=@view.texts.Get("InsertingLoadingLabel")>
                                                        </TaskButton>

                                                 </p>
                                           </div>
								        </div>
                                     </div>
                                                            
                                <div class="col-xl-8">

                                    <div class="card card-flush h-xl-100">
										
										<div class="card-header pt-7">
											
											<h3 class="card-title align-items-start flex-column">
                                                     <span class="card-label fw-bold text-dark">@view.texts.Get("SearchResultLabel")</span>
                                              </h3>
                                        </div>

                                        <div class="card-body">
                                            @if (view.searchresult != null)
                                            {
                                                @if (view.searchresult.Count > 0)
                                                {
                                                      <DataGrid TItem="ObjectPermissionResult" Data="@view.searchresult"  Responsive  ShowPager >                                                                                                                                      
                                                        <DataGridColumns>

                                                            <DataGridColumn Field="@nameof(ObjectPermissionResult.ObjectName)" Caption=@view.texts.Get("ObjectName-Label") />
                                                            <DataGridColumn Field="@nameof(ObjectPermissionResult.ObjectCode)" Caption=@view.texts.Get("ObjectCode-Label") />

                                                            <DataGridColumn Field="@nameof(ObjectPermissionResult.ObjectPermissionID)" Caption=@view.texts.Get("Edit-Label")>
                                                                <DisplayTemplate>
                                                                      @{
                                                                            ObjectPermissionResult obj = (context as ObjectPermissionResult);
                                                                                                                                                   
                                                                            @if(view.Permissions.AllowSave)
                                                                            {
                                                                                <IconButton Icon="IconButton.TYPEICONENUM.EDIT" 
                                                                                        OnClick="()=>OnDetClick(obj.ObjectPermissionID)"></IconButton>                                                                                                                                                   
                                                                            }
                                                                      }
                                                    
                                                                </DisplayTemplate>
                                                            </DataGridColumn>

                                                            </DataGridColumns>
                                      
                                                        </DataGrid>

                                                }
                                                else
                                                {
                                                    <p> @view.texts.Get("NoRecordsFound") </p>
                                                }
                                              }
                                         
                                        </div>

                                    </div>
                                                                  

                                </div>

                           
                             </div>

                        </div>                       

                        <div style="display:@view.EditingState">
                            
                           <BackButton OnClick="Back"></BackButton>
                           
                           <div class="row gy-5 g-xl-10">

                                    <div class="col-xl-8">                                
                                        <div class="card card-flush h-xl-100">								      
		                                    <div class="card-header pt-7">
									  
			                                    <h3 class="card-title align-items-start flex-column">
                                                     <span class="card-label fw-bold text-dark">@view.texts.Get("ObjectPermissionRecord-Label")</span>
                                                 </h3>									        
									       
                                            </div>
                                           
                                            <div class="card-body">										            
                                                    
                                                    <div class="row">
                                                        <div class="col-md-12">                                                            

                                                            <div class="form-group">
                                                                 <label class="form-label" for="name">@view.texts.Get("ObjectName-Label"):</label>
                                                                <input type="text" class="form-control field" @bind-value="@view.result.ObjectName" />
                                                                <label class="validation_field">@view.GetSummaryMessage("ObjectName") </label>
                                                            </div>
                                                        </div>
                                                    </div>

                                                   <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="form-label" for="email">@view.texts.Get("ObjectCode-Label"):</label>
                                                                <input type="text" class="form-control field" @bind-value="@view.result.ObjectCode" />
                                                                 <label class="validation_field">@view.GetSummaryMessage("ObjectCode") </label>
                                                            </div>
                                                        </div>
                                                    </div>

                                                     <div class="row">
                                                        <div class="col-md-12">

                                                            <p class="field" style="padding-top:10px">

                                                            <TaskButton @ref="savenewbtn" OnClick="OnSet" 
                                                                    Title=@view.texts.Get("SaveObjectPermissionButton-Label")
                                                                    Description=@view.texts.Get("SaveObjectPermissionButton-Description")
                                                                                ActionLabel=@view.texts.Get("Saving-Label")
                                                                                ReadOnly=!view.Permissions.AllowSave>
                                                            </TaskButton>

                                                            </p>
                                                         </div>
		                                           </div>

                                             </div>
		                                </div>
                                    </div>
                                                            
                                                           
                                 </div>                                                                                   

                        </div>
                    }
                    else
                    {
                        <PageLoading LoadingText="Loading page. Please, wait..."></PageLoading>

                    }
                </div>
            </div>
        </div>




@code {

 
    private ObjectPermissionViewModel view; 
   
    //


    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            if (await this.InitResources())
            {
                await this.InitCacheAndLocalization();

                this.InitServices();

                view = new ObjectPermissionViewModel((_systemservices as SystemProxy),
                   (_cache as DataCacheProxy), user);

                view.Permissions
                    = BaseViewModel.SetPermissions(permissions, "SYSOBJECTPERMISSION", false);

                await view.InitializeModels();

                _LoadingData_Text = view.texts.Get("LoadingData");
                _PageTitle = view.texts.Get("Instance-PageTitle");
                _msgYes = view.texts.Get("Yes-Text");
                _msgNo = view.texts.Get("No-Text");

            }

            StateHasChanged();

        }
    }


    public async Task OnSearch()
    {
        searchbtn.Begin(); 
        await view.Search();

        if (!view.ServiceStatus.Success)
        {
            await msgbox.ShowDialog(view.texts.Get("ErrorOnExecuteSearch"),
                view.ServiceStatus.Exceptions.Messages[0].Description);
        }

        searchbtn.End();
    }

    public void OnNew()
    {

        view.InitNew(); 
        StateHasChanged();
    }

    public async Task OnGet(object id)
    {
        await loading.Begin() ;

        await view.Get(id);

        await loading.End();

        if (!view.ServiceStatus.Success)
        {
            await msgbox.ShowDialog(view.texts.Get("ErrorOnReturnData"),
                view.ServiceStatus.Exceptions.Messages[0].Description);
        }
        else
        {
            view.InitEdit(); 

        }

        StateHasChanged();
    }

  
    public async Task OnSet()
    {        
         savenewbtn.Begin(); 
       
         await view.Set(); 

        if (!view.ServiceStatus.Success)
        {
            await msgbox.ShowDialog(view.texts.Get("NoticeLabel"),
                view.ServiceStatus.Exceptions.Messages[0].Description);
        }
        else
        {
            if (this.view.Inserting)
            {
               await msgbox_create.ShowDialog(view.texts.Get("SuccessLabel"),
                 view.texts.Get("AfterSaveAnswering"));
            }
            else
            {
                await msgbox.ShowDialog(view.texts.Get("SuccessLabel"),
                  view.texts.Get("SuccessSaveMessage"));
                this.Back();
            }

        }

        savenewbtn.End();

    }
     
    public async Task OnDetClick(object id)
    {        
       await OnGet(id);

    }

    public void Back()
    {
        view.BackToSearch(); 
        StateHasChanged();

    }

    public void GoHome()
    {
        string url = _appctrl.UserInfo.HomeURL;
        NavigationManager.NavigateTo(url);

    }
 


}