@page "/datalog"

@inherits SuperAdminLayout
@layout SuperAdminLayout

@inject NavigationManager NavigationManager
@inject HttpClient _httpclient
@inject IAppControllerAsync<UserAuthenticated> _appctrl
@inject IAppSettings _settings
@inject IDataCacheProxyManager _cache
@inject ISystemProxyManager _systemservices


<MessageBox @ref="msgbox"></MessageBox>

<TaskLoading @ref="loading" Title=@_LoadingData_Text></TaskLoading>


<div id="kt_app_content" class="app-content flex-column-fluid">
    <div id="kt_app_content_container" class="app-container container-xxl">

        <div class="">

            <BreadCrumbView PageTitle="@_PageTitle" HomeURL="@homeURL" ></BreadCrumbView>
                                    

                @if (view != null)
                {
                    <div style="display:@view.SearchingState">

                        <div class="row gy-5 g-xl-10">

                            <div class="col-xl-4">                                
                                <div class="card card-flush h-xl-100">								      
								    <div class="card-header pt-7">
									  
									    <h3 class="card-title align-items-start flex-column">
                                        <span class="card-label fw-bold text-dark">@view.texts.Get("SearchButtonLabel")</span>
                                    </h3>									        
									       
                                    </div>
                                           
                                    <div class="card-body">
							             <div class="form-group">
                                        <label class="form-label">@view.texts.Get("SearchByOperationType-Label"):</label>

                                                @if (view.listTipoOperacao.Count > 0)
                                                {
                                                        <SelectList TItem="TipoOperacaoValueModel"
                                                                    TValue="string"
                                                                    Data="@view.listTipoOperacao"
                                                                    TextField="@((item)=>item.Text)"
                                                                    ValueField="@((item)=>item.Value)"
                                                                    @bind-SelectedValue="@view.param.pOperation">
                                                        </SelectList>
                                    
                                                }

                                        </div>		
                                        
                                         <div class="form-group">
                                        <label class="form-label">@view.texts.Get("SearchByObject-Label"):</label>

                                                @if (view.listTabelas.Count > 0)
                                                {

                                                       <SelectList TItem="TabelasValueModel"
                                                                        TValue="string"
                                                                        Data="@view.listTabelas"
                                                                        TextField="@((item)=>item.Text)"
                                                                        ValueField="@((item)=>item.Value)"
                                                                        @bind-SelectedValue="@view.param.pTableName"></SelectList>
                                      
                                                }
                                          </div>
                                         
                                        <div class="form-group">
                                        <label class="form-label" for="name">@view.texts.Get("SearchByIntervalDate-Label"):</label>
                                            <Switch TValue="bool"  CheckedChanged="OnChangeSearchByDate"></Switch>
                                
                                        </div>
                                          
                                         @if (view.param.SearchByDate)
                                         {
                                                <div class="form-group">
                                            <span>@view.texts.Get("SearchByInicialDate-Label"):</span>
                                                    <DateEdit TValue="DateTime" @bind-Date="@view.param.pDate_Start" />
                                                    <br/>
                                            <span>@view.texts.Get("SearchByFinalDate-Label"):</span>
                                                    <DateEdit TValue="DateTime" @bind-Date="@view.param.pData_End" />                                            

                                                </div>
                                           }

                                           <div class="form-group">
                                                <label class="form-label">@view.texts.Get("SearchByRecordID-Label"):</label>
                                                <input type="text" class="form-control" maxlength="20" @bind-value="@view.param.pID">
                                                
                                           </div>

                                           <p class="field" style="padding-top:10px">

                                                  <TaskButton @ref="searchbtn" OnClick="OnSearch" 
                                                         Title=@view.texts.Get("SearchButtonLabel")                                                         
                                                         ReadOnly=!view.Permissions.AllowRead
                                                         ActionLabel=@view.texts.Get("SearchingLabel")>
                                                </TaskButton>

                                            </p>

                                    </div>
							   </div>
                             </div>
                                                            
                            <div class="col-xl-8">

                                <div class="card card-flush h-xl-100">
										
									<div class="card-header pt-7">
											
										<h3 class="card-title align-items-start flex-column">
                                        <span class="card-label fw-bold text-dark">@view.texts.Get("SearchResultLabel")</span>
                                    </h3>
                                    </div>

                                    <div class="card-body">
                                            
                                            @if (view.searchresult != null)
                                            {
                                                @if (view.searchresult.Count > 0)
                                                {
                                                       <DataGrid TItem="DataLogResult" Data="@view.searchresult"  Responsive  ShowPager PageSize=10 >                                                                                         
                                             
                                                            <DataGridColumns>

                                                                 <DataGridColumn Field="@nameof(DataLogResult.ID)" Caption="ID" />
                                                                <DataGridColumn Field="@nameof(DataLogResult.Email)" Caption="User" />
                                                                <DataGridColumn Field="@nameof(DataLogResult.TableName)" Caption=@view.texts.Get("TableName-Label") />
                                                                <DataGridColumn Field="@nameof(DataLogResult.OperationText)" Caption=@view.texts.Get("OperationText-Label") />
                                                                <DataGridColumn Field="@nameof(DataLogResult.Date)" Caption=@view.texts.Get("Date-Label") />
                                                                <DataGridColumn Field="@nameof(DataLogResult.DataLogID)" Caption=@view.texts.Get("DetailsLabel")>
                                                                    <DisplayTemplate>
                                                                         @{
                                                                                DataLogResult obj = (context as DataLogResult);
                                                                               
                                                                                @if(view.Permissions.AllowSave)
                                                                                {
                                                                                    <IconButton Icon="IconButton.TYPEICONENUM.DETAILS" 
                                                                                            OnClick="()=>OnDetClick(obj.DataLogID)"></IconButton>                                                                                                                                                   
                                                                                }
                                                                          

                                                                            }
                                                    
                                                                    </DisplayTemplate>
                                                                </DataGridColumn>
                                            
                                                                </DataGridColumns>
                                      
                                                        </DataGrid>
                                    
                                                }
                                                else
                                                {
                                                    <p> @view.texts.Get("NoRecordsFound") </p>
                                                }
                                            }
                                         
                                    </div>

                                </div>
                                                                  

                            </div>

                           
                        </div>

                    </div>                       

                    <div style="display:@view.EditingState">
                            
                        <BackButton OnClick="Back"></BackButton>
                                              
                         <div class="row gy-5 g-xl-10">

                                <div class="col-xl-12">                                
                                    <div class="card card-flush h-xl-100">								      
		                                <div class="card-header pt-7">
									  
                                              <div class="row">
                                                    
                                                  <div class="col-md-4">
                                                        <h3 class="card-title align-items-start flex-column">
                                                            <span class="card-label fw-bold text-dark">@view.texts.Get("DetailsLabel")</span>
                                                         </h3>									        
                                                    </div>

                                                    <div class="col-md-8">
                                                            <span>@view.texts.Get("LogID-Label"): @view.result.DataLogID  </span>
                                                    </div>
                                                  
                                               </div>          			                                                                                                                                                                         
									       
                                        </div>
                                           
                                        <div class="card-body">										                                                                                                                                                                                                                      
                                              <div class="row">

                                                    <div class="col-md-10">
                                                        <div class="form-group">
                                                            <label class="form-label">@view.texts.Get("LogInformation-Label"):</label>
                                                            <input type="text" value="@view.result.ID | @view.result.TableName | @view.result.OperationText | @view.result.Date | @view.result.Email"
                                                                   class="form-control" disabled />
                                                        </div>
                                                    </div>

                                                    <div class="col-md-2" >
                                                                                                                        
                                                        <div class="mr-2" style="padding-bottom:5px">
                                                            <button type="button" class="btn btn-light-primary me-3"  @onclick="OnGetTimeline">
                                                                <span class="svg-icon svg-icon-4 me-1">
                                                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                                        <path opacity="0.3" d="M21.25 18.525L13.05 21.825C12.35 22.125 11.65 22.125 10.95 21.825L2.75 18.525C1.75 18.125 1.75 16.725 2.75 16.325L4.04999 15.825L10.25 18.325C10.85 18.525 11.45 18.625 12.05 18.625C12.65 18.625 13.25 18.525 13.85 18.325L20.05 15.825L21.35 16.325C22.35 16.725 22.35 18.125 21.25 18.525ZM13.05 16.425L21.25 13.125C22.25 12.725 22.25 11.325 21.25 10.925L13.05 7.62502C12.35 7.32502 11.65 7.32502 10.95 7.62502L2.75 10.925C1.75 11.325 1.75 12.725 2.75 13.125L10.95 16.425C11.65 16.725 12.45 16.725 13.05 16.425Z" fill="currentColor"></path>
                                                                        <path d="M11.05 11.025L2.84998 7.725C1.84998 7.325 1.84998 5.925 2.84998 5.525L11.05 2.225C11.75 1.925 12.45 1.925 13.15 2.225L21.35 5.525C22.35 5.925 22.35 7.325 21.35 7.725L13.05 11.025C12.45 11.325 11.65 11.325 11.05 11.025Z" fill="currentColor"></path>
                                                                    </svg>
                                                                </span>
                                                                @view.texts.Get("ShowTimeLine-Label")
                                                            </button>
                                                        </div>
                                                                                                                                                                         
                                                    </div>

                                            </div>     

                                            @if (!view.ShowTimeline)
                                             {
                                                <div class="row" style="margin-top: 15px">
                                                    <div class="col-lg-6">

                                                       <h5>@view.texts.Get("OldVersionData-Label")</h5>

                                                        @if (view.logold_content != null)
                                                        {
                                                            @if (view.logold_content.Count > 0)
                                                            {
                                                                    <DataGrid TItem="DataLogItem" Data="@view.logold_content"  Responsive >                                                                                         
                                             
                                                                        <DataGridColumns>
                                                                                <DataGridColumn Field="@nameof(DataLogItem.ItemName)" Caption=@view.texts.Get("Field-Label") />
                                                                                <DataGridColumn Field="@nameof(DataLogItem.ItemValue )" Caption=@view.texts.Get("Value-Label") />

                                                                        </DataGridColumns>
                                      
                                                                    </DataGrid>
                                      
                                                            }
                                                            else
                                                            {
                                                                <p> @view.texts.Get("HasNoOldVersion-Label") </p>
                                                            }
                                                        }

                                                  </div>

                                                    <div class="col-lg-6">
                                                        <h5>@view.texts.Get("CurrentVersionData-Label")</h5>

                                                        @if (view.logcurrent_content != null)
                                                        {
                                                            @if (view.logcurrent_content.Count > 0)
                                                            {
                                                                <DataGrid TItem="DataLogItem" Data="@view.logcurrent_content"  Responsive >                                                                                         
                                             
                                                                        <DataGridColumns>
                                                                                 <DataGridColumn Field="@nameof(DataLogItem.ItemName)" Caption=@view.texts.Get("Field-Label") />

                                                                                    <DataGridColumn Field="@nameof(DataLogItem.ItemValue)" Caption=@view.texts.Get("DetailsLabel")>
                                                                                    <DisplayTemplate>
                                                                                            @{
                                                                                                DataLogItem obj = (context as DataLogItem);
                                                                                                string color = "black";
                                                                                                string bold = "bold";
                                                                                                if (obj.IsDifferent)
                                                                                                {
                                                                                                    color = "red";
                                                                                                    bold = "bold";
                                                                                                }
                                                                                                <span style="color:@color;font-weight:@bold"> @obj.ItemValue </span>
                                                                                            }
                                                    
                                                                                    </DisplayTemplate>
                                                                                </DataGridColumn>
                                            
                                                                            </DataGridColumns>
                                      
                                                                 </DataGrid>
                                    
                                                            }
                                                            else
                                                            {
                                                                 <p> @view.texts.Get("HasNoCurrentVersion-Label")  </p>
                                                            }
                                                        }

                                                    </div>

                                                </div>
                                                }
                                                else
                                                {
                                                    <div class="row" style="margin-top: 15px">
                                                        <div class="col-lg-12">
                                                            <BackButton OnClick="BackTimeLine"></BackButton>
                                                         </div>
                                                    </div>
                                                        
                                                     <div class="row" style="margin-top: 15px">
                                                        <div class="col-lg-12">                                                            

                                                            @if (view.timeline != null)
                                                            {
                                                                @if (view.timeline.Count > 0)
                                                                {

                                                                    <DataLogTimeline TimeLineRecords="@view.timeline" Title="@timelinetitle">
                                                                      
                                                                    </DataLogTimeline>
                                                                }
                                                                else
                                                                {
                                                                    <p> @view.texts.Get("HasNoTimeLine-Label")  </p>
                                                                }
                                                            }


                                                        </div>
                                                    </div>
                                                }
                                               
                                        </div>
		                            </div>
                                </div>
                                                                                         
                           
                            </div>                                                                                                            

                    </div>
                }
                else
                {

                <PageLoading LoadingText="Loading page. Please, wait..."></PageLoading>
                  
                                                  
                }
            </div>
        </div>
   </div>




@code {


    //

    private DataLogViewModel view;

    protected TaskIconButton timelinebtn;

    private string timelinetitle = ""; 
    //

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            if (await  this.InitResources())
            {
                await this.InitCacheAndLocalization(); 

                this.InitServices(); 

                view = new DataLogViewModel((_systemservices as SystemProxy),
                   (_cache as DataCacheProxy), user, _httpclient, _settings.ServiceURL, _appctrl.UserInfo.Token);

                view.texts = this.localization;

                view.Permissions
                    = BaseViewModel.SetPermissions(permissions, "SYSDATALOG", false);

                await view.InitializeModels();
                await view.LoadTipoOperacaoList((_cache as DataCacheProxy));
                await view.LoadTabelaList((_cache as DataCacheProxy));

                _LoadingData_Text = view.texts.Get("LoadingData");
                _PageTitle = view.texts.Get("DataLog-PageTitle");

            }

            StateHasChanged();

        }
    }

    public async Task OnSearch()
    {
        searchbtn.Begin(); 
        await view.Search();

        if (!view.ServiceStatus.Success)
        {
            await msgbox.ShowDialog(view.texts.Get("ErrorOnExecuteSearch"), 
                view.ServiceStatus.Exceptions.Messages[0].Description);
        }

        searchbtn.End();
    }

    public void OnNew()
    {

        view.InitNew(); 
        StateHasChanged();
    }

    public async Task OnGet(object id)
    {
        await loading.Begin() ;

        await view.Get(id);

        await loading.End();

        if (!view.ServiceStatus.Success)
        {
            await msgbox.ShowDialog(view.texts.Get("ErrorOnReturnData"), 
            view.ServiceStatus.Exceptions.Messages[0].Description);
        }
        else
        {
            view.InitEdit(); 

        }

        StateHasChanged();
    }

    public async Task OnGetTimeline()
    {

        await view.GetTimeline();

        if (!view.ServiceStatus.Success)
        {
            await msgbox.ShowDialog(view.texts.Get("ErrorOnReturnData"), 
            view.ServiceStatus.Exceptions.Messages[0].Description);
            view.ShowTimeline = false; 
        }
        else
        {
            timelinetitle = view.texts.Get("ShowTimeLine-Label") + " - ID: " + view.result.ID;   
            view.ShowTimeline = true; 
        }

    }


    public async Task OnDetClick(object id)
    {        
        await OnGet(id);

    }

    public async Task OnChangeSearchByDate()
    {
        view.param.SearchByDate = !view.param.SearchByDate;
        view.param.pDate_Start = DateTime.Now.AddDays(-7); 
        view.param.pData_End = DateTime.Now;
    }
     

    public void Back()
    {
        view.BackToSearch(); 
        StateHasChanged();

    }

    public void BackTimeLine()
    {
        view.ShowTimeline = false;
        StateHasChanged();
    }
    

    public void GoHome()
    {
        string url = _appctrl.UserInfo.HomeURL;
        NavigationManager.NavigateTo(url);

    }


}
