
@if (_visible)
{
    
    <FluentButton Appearance="@ButtonAppearance" Title="@Description"
                    IconStart="@IconStart" IconEnd="@IconEnd"
                    Disabled=@_disabled
                    Loading="@executing" OnClick="@StartLoadingAsync">
        @Title
        </FluentButton>
          
     

}


@code {

    private bool executing = false;

    [Parameter]
    public string Title { get; set; } = "Button";

    [Parameter]
    public Icon IconStart { get; set; } 

    [Parameter]
    public Icon IconEnd { get; set; }

    [Parameter]
    public string ActionLabel { get; set; } = ""; 

    [Parameter]
    public string Description { get; set; } = ""; 

    [Parameter]
    public Appearance ButtonAppearance { get; set; } = Appearance.Accent;

    private string _class = "var(--primary)";

    [Parameter]
    public string Class { get; set; } = "var(--primary)";


    private bool _visible = true;

    [Parameter]
    public bool Visible
    {
        get
        {

            return _visible;
        }

        set
        {
            _visible = value;
        }
    }

  
    private bool _disabled =false;

    [Parameter]
    public bool Disabled
    {
        get
        {

            return _disabled;
        }

        set
        {
            _disabled = value;
        }
    }


    [Parameter]
    public EventCallback OnClick { get; set; }



    async Task StartLoadingAsync()
    {
        executing = true;
        await OnClick.InvokeAsync();
        executing = false; 
    }

   

}
